import numpy as np
from numpy.random
if __name__ == '__main__':
	# m1 - 1/2(m2 + m5) = 1
	# m2 - 1/2(m1 + m3) = 1
	# m3 - 1/3(m2 + m4 + m6) = 1
	# m4 - 1/2(m3 + m7) = 1
	# m5 - 1/2(m1 + m8) = 1
	# m6 - 1/2(m3 + m7) = 1
	# m7 - 1/3(m4 + m6 + m10) = 1
	# m8 - 1/3(m5 + m9 + m11) = 1
	# m9 - 1/2(m8 + m12) = 1
	# m10 = 0
	# m11 - 1/2(m8 + m12) = 1
	# m12 - 1/3(m9 + m11 + m13) = 1
	# m13 - 1/2(m12 + m14) = 1
	# m14 - 1/2(m13 + m10) = 1

    right_side = [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1]

    system = [
        [1, -1/2, 0, 0, -1/2, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [-1/2, 1, -1/2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, -1/3, 1, -1/3, 0, -1/3, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, -1/2, 1, 0, 0, -1/2, 0, 0, 0, 0, 0, 0, 0],
        [-1/2, 0, 0, 0, 1, 0, 0, -1/2, 0, 0, 0, 0, 0, 0],
        [0, 0, -1/2, 0, 0, 1, -1/2, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, -1/3, 0, -1/3, 1, 0, 0, -1/3, 0, 0, 0, 0],
        [0, 0, 0, 0, -1/3, 0, 0, 1, -1/3, 0, -1/3, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, -1/2, 1, 0, 0, -1/2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, -1/2, 0, 0, 1, -1/2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, -1/3, 0, -1/3, 1, -1/3, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1/2, 1, -1/2],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, -1/2, 0, 0, -1/2, 1]
    ]

    free_vars = np.linalg.solve(system, right_side)
    print(free_vars)
    print(f"sanity check: free_vars[9] = m10 = {free_vars[9]} must be 0")
    
    
    
